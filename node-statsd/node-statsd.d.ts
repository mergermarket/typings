// Generated by typings
// Source: https://raw.githubusercontent.com/mergermarket/typings/master/node-statsd/node-statsd.d.ts
declare module "node-statsd" {
  export interface IStatsdOptions {
    host: string;
    port?: string | number;
    prefix?: string;
    suffix?: string;
    globalise?: boolean;
    cacheDns?: boolean;
    mock?: boolean;
    global_tags?: string[];
  }

  export interface IDummyStatsObject extends IStatsdOptions {
    trackHttpResponseTime(
      responseTime: number,
      httpCallee: string,
      operation: string,
      status: string
    ): void

    trackSqlConnectTime(
      connectTime: number,
      db: string
    ): void

    trackSqlQueryTime(
      queryTime: number,
      db: string,
      operation: string,
      productId: string
    ): void

    histogram(stat: string, value: number, sample_rate?: number | string[], tags?: string[]): void

    gauge(stat: string, value: number, sample_rate?: number | string[], tags?: string[]): void

    increment(stat: string, sample_rate?: number | string[], tags?: string[]): void
  }

  export default class StatsD {
    constructor(
      host: IStatsdOptions | string,
      port?: string | number,
      prefix?: string,
      suffix?: string,
      globalize?: boolean,
      cacheDns?: boolean,
      mock?: boolean,
      global_tags?: string[]
    );

    trackHttpResponseTime(
      responseTime: number,
      httpCallee: string,
      operation: string,
      status: string
    ): void

    trackSqlConnectTime(
      connectTime: number,
      db: string
    ): void

    trackSqlQueryTime(
      queryTime: number,
      db: string,
      operation: string,
      productId: string
    ): void

    histogram(stat: string, value: number, sample_rate?: number | string[], tags?: string[]): void

    gauge(stat: string, value: number, sample_rate?: number | string[], tags?: string[]): void

    increment(stat: string, sample_rate?: number | string[], tags?: string[]): void
  }

  export { StatsD };
}
